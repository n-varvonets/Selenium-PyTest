from selenium import webdriver
import time

id_verify = "verify"
link = 'http://suninjuly.github.io/wait1.html'

with webdriver.Chrome(executable_path='C:/Users/NIk/PycharmProjects/chromedriver.exe') as browser:
    try:
        browser.get(link)
        """дальше падала ошибка, т.к. кнопка verify появлялась с оиждние 1 сек - ассинхронно с кодом"""
        # time.sleep(3)  # это 1ый топроный метод решения задачи, потому что А если изменится время задержки при
        # появлении кнопки? Увеличим длительность паузы? А еще на разных машинах с разной скоростью интернета кнопка
        # может появляться через разные промежутки времени. Можно перед каждым действием добавить задержку, но тогда
        # значительную часть времени прогона тестов будут занимать бесполезные ожидания, при этом с увеличением
        # количества тестов эта проблема будет только расти.
        # --------------------------------------------------------------------------
        """Идеальное решение могло бы быть таким: нам все равно надо избежать ложного теста из-за асинхронной работы
         скриптов или задержек от сервера, поэтому мы будем ждать события на странице в течение заданного количества
          времени (например, 5 секунд). Проверять наличие элемента каждые 500 мс. Как только элемент будет найден,
           мы сразу перейдем к следующему шагу в тесте. Таким образом, мы сможем получить нужный элемент в идеальном
            случае сразу, в худшем случае за 5 секунд."""
        browser.implicitly_wait(5)  # 2ой метод - неявный (Implicit wait),так как его не надо явно указывать каждый раз,
        # когда мы выполняем поиск элементов, оно автоматически будет применяться при вызове каждой последующей команды.
        input_confirm_butt = browser.find_element_by_id(id_verify).click()

        message = browser.find_element_by_id("verify_message")

        assert "successful" in message.text

    except Exception as e:
        print(e)
    time.sleep(10)
    browser.quit()

